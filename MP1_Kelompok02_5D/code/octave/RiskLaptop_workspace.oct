# Created by Octave 9.4.0, Wed Aug 20 09:13:02 2025 GMT <unknown@DESKTOP-6D7MKRB>
# name: X
# type: matrix
# rows: 30
# columns: 3
 34 92 1
 38 88 2
 45 85 3
 52 78 3
 58 70 4
 62 65 5
 68 80 5
 72 60 6
 75 55 7
 78 55 8
 80 50 9
 85 40 9
 90 25 10
 40 60 2
 50 75 4
 55 68 6
 48 82 3
 66 58 7
 70 45 8
 36 95 1
 44 80 2
 59 66 5
 73 62 6
 81 48 9
 69 72 4
 61 60 5
 47 83 3
 53 70 4
 77 54 8
 88 35 11


# name: Y_actual
# type: matrix
# rows: 30
# columns: 1
 10
 15
 25
 35
 45
 55
 50
 70
 78
 82
 88
 90
 95
 30
 40
 55
 28
 65
 75
 12
 22
 52
 68
 85
 48
 57
 20
 42
 80
 92


# name: Y_pred
# type: matrix
# rows: 30
# columns: 1
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0


# name: ans
# type: scalar
0


# name: antecedent
# type: matrix
# rows: 1
# columns: 3
 1 3 1


# name: connection
# type: scalar
1


# name: consequent
# type: scalar
1


# name: data
# type: matrix
# rows: 30
# columns: 4
 34 92 1 10
 38 88 2 15
 45 85 3 25
 52 78 3 35
 58 70 4 45
 62 65 5 55
 68 80 5 50
 72 60 6 70
 75 55 7 78
 78 55 8 82
 80 50 9 88
 85 40 9 90
 90 25 10 95
 40 60 2 30
 50 75 4 40
 55 68 6 55
 48 82 3 28
 66 58 7 65
 70 45 8 75
 36 95 1 12
 44 80 2 22
 59 66 5 52
 73 62 6 68
 81 48 9 85
 69 72 4 48
 61 60 5 57
 47 83 3 20
 53 70 4 42
 77 54 8 80
 88 35 11 92


# name: fid
# type: scalar
3


# name: fis
# type: scalar struct
# ndims: 2
 1 1
# length: 11
# name: name
# type: sq_string
# elements: 1
# length: 13
RiskLaptopFIS


# name: type
# type: sq_string
# elements: 1
# length: 7
mamdani


# name: version
# type: scalar
1


# name: andMethod
# type: sq_string
# elements: 1
# length: 3
min


# name: orMethod
# type: sq_string
# elements: 1
# length: 3
max


# name: impMethod
# type: sq_string
# elements: 1
# length: 3
min


# name: aggMethod
# type: sq_string
# elements: 1
# length: 3
max


# name: defuzzMethod
# type: sq_string
# elements: 1
# length: 8
centroid


# name: input
# type: struct
# ndims: 2
 1 3
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
Suhu



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
Baterai



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
Pemakaian





# name: range
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 30 90



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 0 100



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 0 12





# name: mf
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: scalar struct
# ndims: 2
 1 1
# length: 3
# name: name
# type: sq_string
# elements: 1
# length: 6
Sedang


# name: type
# type: sq_string
# elements: 1
# length: 6
trapmf


# name: params
# type: matrix
# rows: 1
# columns: 4
 50 60 70 75





# name: <cell-element>
# type: scalar struct
# ndims: 2
 1 1
# length: 3
# name: name
# type: sq_string
# elements: 1
# length: 6
Sedang


# name: type
# type: sq_string
# elements: 1
# length: 6
trapmf


# name: params
# type: matrix
# rows: 1
# columns: 4
 50 65 80 85





# name: <cell-element>
# type: scalar struct
# ndims: 2
 1 1
# length: 3
# name: name
# type: sq_string
# elements: 1
# length: 6
Sedang


# name: type
# type: sq_string
# elements: 1
# length: 6
trapmf


# name: params
# type: matrix
# rows: 1
# columns: 4
 2 4 6 7









# name: output
# type: scalar struct
# ndims: 2
 1 1
# length: 3
# name: name
# type: sq_string
# elements: 1
# length: 6
Risiko


# name: range
# type: matrix
# rows: 1
# columns: 2
 0 100


# name: mf
# type: scalar struct
# ndims: 2
 1 1
# length: 3
# name: name
# type: sq_string
# elements: 1
# length: 6
Sedang


# name: type
# type: sq_string
# elements: 1
# length: 6
trapmf


# name: params
# type: matrix
# rows: 1
# columns: 4
 30 50 60 70






# name: rule
# type: struct
# ndims: 2
 1 6
# length: 4
# name: antecedent
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 1 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 2 2 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 3 1 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 2 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 1 2 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 3 3 2





# name: consequent
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
3



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
2





# name: weight
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1





# name: connection
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1









# name: i
# type: scalar
1


# name: inputContoh
# type: matrix
# rows: 1
# columns: 3
 78 55 8


# name: j
# type: scalar
2


# name: mf_name
# type: sq_string
# elements: 1
# length: 6
Sedang


# name: ruleList
# type: matrix
# rows: 6
# columns: 6
 1 3 1 1 1 1
 2 2 2 2 1 1
 3 1 3 3 1 2
 2 3 1 1 1 1
 1 2 3 2 1 1
 3 3 2 2 1 1


# name: rules
# type: struct
# ndims: 2
 1 6
# length: 4
# name: antecedent
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 1 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 2 2 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 3 1 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 2 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 1 2 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 3 3 2





# name: consequent
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
3



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
2





# name: weight
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1





# name: connection
# type: cell
# rows: 1
# columns: 6
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
2



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1







# name: str_antecedent
# type: sq_string
# elements: 1
# length: 11
Suhu Sedang


# name: var_name
# type: sq_string
# elements: 1
# length: 7
Baterai


# name: weight
# type: scalar
1


